# Prior to conda-forge, Copyright 2014-2019 Peter Williams and collaborators.
# This file is licensed under a 3-clause BSD license; see LICENSE.txt.

{% set name = "gtk+" %}
{% set version = "3.24.30" %}
{% set version_majmin = '.'.join(version.split('.', 2)[:2]) %}

package:
  name: gtk3  # note customization
  version: {{ version }}

source:
  url: https://download.gnome.org/sources/{{ name }}/{{ version_majmin }}/{{ name }}-{{ version }}.tar.xz
  sha256: ba75bfff320ad1f4cfbee92ba813ec336322cc3c660d406aad014b07087a3ba9
  patches:
    - m_pi.patch
    - no-module-warning.patch

build:
  number: 0
  # workaround for bug in LIEF (https://github.com/lief-project/LIEF/issues/239)
  # that resulted in missing symbols
  rpaths_patcher: patchelf  # [linux]
  run_exports:
    - {{ pin_subpackage('gtk3', max_pin='x') }}
    # gtk apps need at least a default icon set for fallback
    - adwaita-icon-theme
  missing_dso_whitelist:
    - '*/libX11.so*'  # [linux]
    - '*/libXext.so*'  # [linux]
    - /usr/lib/libcups.2.dylib    # [osx]

requirements:
  build:
    - meson
    - ninja
    - gobject-introspection
    - pkg-config
    - pthread-stubs  # [linux]
    - {{ compiler('c') }}
    - {{ cdt('libice-devel') }}  # [linux]
    - {{ cdt('libsm-devel') }}  # [linux]
    - {{ cdt('libx11-devel') }}  # [linux]
    - {{ cdt('libxcomposite-devel') }}  # [linux]
    - {{ cdt('libxcursor-devel') }}  # [linux]
    - {{ cdt('libxdamage-devel') }}  # [linux]
    - {{ cdt('libxext-devel') }}  # [linux]
    - {{ cdt('libxi-devel') }}  # [linux]
    - {{ cdt('libxinerama-devel') }}  # [linux]
    - {{ cdt('libxfixes-devel') }}  # [linux]
    - {{ cdt('libxrandr-devel') }}  # [linux]
    - {{ cdt('libxrender-devel') }}  # [linux]
    - {{ cdt('libxtst-devel') }}  # [linux]
    - {{ cdt('mesa-libEGL-devel') }}  # [linux]
    - {{ cdt('mesa-libGL-devel') }}  # [linux]
    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
    # for native build prior to cross build
    - atk         # [build_platform != target_platform]
    - cairo       # [build_platform != target_platform]
    - epoxy       # [build_platform != target_platform]
    - freetype    # [build_platform != target_platform]
    - fribidi     # [build_platform != target_platform]
    - gdk-pixbuf  # [build_platform != target_platform]
    - gettext     # [osx and (build_platform != target_platform)]
    - glib        # [build_platform != target_platform]
    - harfbuzz    # [build_platform != target_platform]
    - pango       # [build_platform != target_platform]
  host:
    - atk
    - cairo
    - epoxy
    - freetype
    - fribidi
    - gdk-pixbuf
    - gettext  # [osx]
    - glib
    - harfbuzz
    - libcups  # [linux]
    - libiconv  # [win]
    - pango
    # dependencies needed with x11 enabled
    - at-spi2-atk  # [linux]
    - fontconfig  # [linux]
    # dependencies needed with wayland enabled
    #- libxkbcommon  # [linux]
  run:
    - hicolor-icon-theme
    - {{ pin_compatible('libcups') }}  # [linux]
    - pango
    # The post-links scripts use these
    - glib-tools

test:
  requires:
    - pkg-config
    - pygobject
  commands:
    # check that the binaries can run
    - gtk-encode-symbolic-svg --help
    - gtk-launch --help
    - gtk-query-immodules-3.0
    - gtk-update-icon-cache --help
    # other binaries require a display, check that they get installed
    {% set cmds = ["gtk-builder-tool", "gtk-query-settings"] %}
    {% for cmd in cmds %}
    - command -v {{ cmd }}  # [unix]
    - where {{ cmd }}  # [win]
    {% endfor %}

    # verify that (some) headers get installed
    - test -f $PREFIX/include/gail-3.0/libgail-util/gail-util.h  # [unix]
    - test -f $PREFIX/include/gtk-3.0/gdk/gdk.h  # [unix]
    - test -f $PREFIX/include/gtk-3.0/gdk/x11/gdkx11window.h  # [linux]
    - test -f $PREFIX/include/gtk-3.0/gtk/gtk.h  # [unix]
    - test -f $PREFIX/include/gtk-3.0/unix-print/gtk/gtkunixprint.h  # [unix]
    - if not exist %PREFIX%\\Library\\include\\gail-3.0\\libgail-util\\gail-util.h exit 1  # [win]
    - if not exist %PREFIX%\\Library\\include\\gtk-3.0\\gdk\\gdk.h exit 1  # [win]
    - if not exist %PREFIX%\\Library\\include\\gtk-3.0\\gdk\\win32\\gdkwin32window.h exit 1  # [win]
    - if not exist %PREFIX%\\Library\\include\\gtk-3.0\\gtk\\gtk.h exit 1  # [win]

    # verify that pkgconfig files get installed
    {% set pcs = ["gail-3.0", "gdk-3.0", "gtk+-3.0"] %}
    {% set pcs = pcs + ["gtk+-unix-print-3.0"] %}  # [unix]
    {% set pcs = pcs + ["gdk-x11-3.0", "gtk+-x11-3.0"] %}  # [linux]
    {% set pcs = pcs + ["gdk-quartz-3.0", "gtk+-quartz-3.0"] %}  # [osx]
    {% set pcs = pcs + ["gdk-win32-3.0", "gtk+-win32-3.0"] %}  # [win]
    {% for pc in pcs %}
    - test -f $PREFIX/lib/pkgconfig/{{ pc }}.pc  # [unix]
    - if not exist %PREFIX%\\Library\\lib\\pkgconfig\\{{ pc }}.pc exit 1  # [win]
    {% endfor %}

    # verify that libs get installed and can be located through pkg-config
    {% set vs_major = dict(vs2015="14", vs2017="15", vs2019="16")[c_compiler] %}  # [win]
    {% set pc_libs = [("gail-3.0", "gailutil-3"), ("gdk-3.0", "gdk-3")] %}
    {% set pc_libs = pc_libs + [("gtk+-3.0", "gtk-3")] %}
    {% for pc, lib in pc_libs %}
    - test -f $PREFIX/lib/lib{{ lib }}${SHLIB_EXT}  # [unix]
    - test -f `pkg-config --variable=libdir --dont-define-prefix {{ pc }}`/lib{{ lib }}${SHLIB_EXT}  # [unix]
    - if not exist %PREFIX%\\Library\\bin\\{{ lib }}-vs{{ vs_major }}.dll exit 1  # [win]
    - for /f "usebackq tokens=*" %%a in (`pkg-config --variable=exec_prefix --dont-define-prefix {{ pc }}`) do if not exist "%%a/bin/{{ lib }}-vs{{ vs_major }}.dll" exit 1  # [win]
    - if not exist %PREFIX%\\Library\\lib\\{{ lib }}.lib exit 1  # [win]
    - for /f "usebackq tokens=*" %%a in (`pkg-config --variable=libdir --dont-define-prefix {{ pc }}`) do if not exist "%%a/{{ lib }}.lib" exit 1  # [win]
    {% endfor %}

about:
  home: http://www.gtk.org/
  license: LGPL-2.0-or-later
  license_family: LGPL
  license_file: COPYING
  summary: Version 3 of the Gtk+ graphical toolkit
  description: |
    GTK is a multi-platform toolkit for creating graphical user interfaces.
    Offering a complete set of widgets, GTK is suitable for projects ranging
    from small one-off projects to complete application suites.
  doc_url: https://developer.gnome.org/gtk3/
  dev_url: https://gitlab.gnome.org/GNOME/gtk

extra:
  recipe-maintainers:
    - ryanvolz
    - stuarteberg
    - tschoonj
