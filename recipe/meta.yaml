# Prior to conda-forge, Copyright 2014-2019 Peter Williams and collaborators.
# This file is licensed under a 3-clause BSD license; see LICENSE.txt.

{% set name = "gtk+" %}
{% set version = "3.24.43" %}
{% set version_majmin = '.'.join(version.split('.', 2)[:2]) %}

# this doesn't get used, but the autotick bot wants to put it in
{% set vs_major = "0.0" %}  # [not win]

package:
  name: gtk3-split
  version: {{ version }}

source:
  url: https://download.gnome.org/sources/{{ name }}/{{ version_majmin }}/{{ name }}-{{ version }}.tar.xz
  sha256: 7e04f0648515034b806b74ae5d774d87cffb1a2a96c468cb5be476d51bf2f3c7
  patches:
    - m_pi.patch
    - no-module-warning.patch

build:
  number: 2

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
    - gobject-introspection
    - meson
    - ninja
    - packaging
    - pkg-config
    - {{ cdt('mesa-libegl-devel') }}  # [linux]
    - {{ cdt('mesa-libgl-devel') }}   # [linux]
    # for native build prior to cross build
    - atk         # [build_platform != target_platform]
    - cairo       # [build_platform != target_platform]
    - epoxy       # [build_platform != target_platform]
    - fribidi     # [build_platform != target_platform]
    - gdk-pixbuf  # [build_platform != target_platform]
    - gettext     # [osx and (build_platform != target_platform)]
    - glib        # [build_platform != target_platform]
    - harfbuzz    # [build_platform != target_platform]
    - pango       # [build_platform != target_platform]
    - expat       # [build_platform != target_platform]
    - zlib        # [build_platform != target_platform]
  host:
    - atk
    - cairo
    - epoxy
    - fribidi
    - gdk-pixbuf
    - gettext  # [osx]
    - glib
    - harfbuzz
    - libcups  # [linux]
    - libiconv  # [win]
    - pango
    # dependencies needed with x11 enabled
    - at-spi2-atk         # [linux]
    - fontconfig          # [linux]
    - xorg-libx11         # [linux]
    - xorg-libxcomposite  # [linux]
    - xorg-libxcursor     # [linux]
    - xorg-libxdamage     # [linux]
    - xorg-libxext        # [linux]
    - xorg-libxfixes      # [linux]
    - xorg-libxi          # [linux]
    - xorg-libxinerama    # [linux]
    - xorg-libxrandr      # [linux]
    - xorg-libxrender     # [linux]
    - xorg-xineramaproto  # [linux]
    # dependencies needed with wayland enabled
    - libxkbcommon              # [linux]
    - wayland                   # [linux]
    - wayland-protocols >=1.21  # [linux]
    # dependencies needed for pkg-config to find cairo
    - expat
    - zlib
    - xorg-xorgproto        # [linux]

outputs:
  - name: gtk3
    script: install.sh  # [unix]
    script: install.bat  # [not unix]
    build:
      post-link: post-link
      run_exports:
        - {{ pin_subpackage('gtk3', max_pin='x') }}
        # gtk apps need at least a default icon set for fallback
        - adwaita-icon-theme
      missing_dso_whitelist:
        - /usr/lib/libcups.2.dylib    # [osx]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - meson
        - ninja
      host:
        - atk
        - cairo
        - epoxy
        - fribidi
        - gdk-pixbuf
        - gettext  # [osx]
        - glib
        - harfbuzz
        - libcups  # [linux]
        - libiconv  # [win]
        - pango
        # dependencies needed with x11 enabled
        - at-spi2-atk  # [linux]
        - fontconfig  # [linux]
        - xorg-libx11         # [linux]
        - xorg-libxcomposite  # [linux]
        - xorg-libxcursor     # [linux]
        - xorg-libxdamage     # [linux]
        - xorg-libxext        # [linux]
        - xorg-libxfixes      # [linux]
        - xorg-libxi          # [linux]
        - xorg-libxinerama    # [linux]
        - xorg-libxrandr      # [linux]
        - xorg-libxrender     # [linux]
        - xorg-xineramaproto  # [linux]
        # dependencies needed with wayland enabled
        - libxkbcommon              # [linux]
        - wayland                   # [linux]
        - wayland-protocols >=1.21  # [linux]
      run:
        - hicolor-icon-theme
        - {{ pin_compatible('libcups') }}  # [linux]
        - pango
        # The post-links scripts use glib-tools
        - glib-tools
        # dependencies needed with x11 enabled
        - xorg-libx11         # [linux]
        - xorg-libxcomposite  # [linux]
        - xorg-libxcursor     # [linux]
        - xorg-libxdamage     # [linux]
        - xorg-libxext        # [linux]
        - xorg-libxfixes      # [linux]
        - xorg-libxi          # [linux]
        - xorg-libxrandr      # [linux]
    test:
      requires:
        - pkg-config
        - pygobject
        - xvfbwrapper  # [linux]
      script: run_test.py
      commands:
        # check that the binaries can run
        - gtk-encode-symbolic-svg --help
        - gtk-launch --help
        - gtk-query-immodules-3.0
        - gtk-update-icon-cache --help
        - xvfb-run -a -s "-screen 0 1024x768x24" gtk-query-settings  # [linux]
        - gtk-query-settings  # [not linux]
        - command -v gtk-builder-tool  # [not win]
        - where gtk-builder-tool  # [win]

        # verify that (some) headers get installed
        - test -f $PREFIX/include/gail-3.0/libgail-util/gail-util.h  # [unix]
        - test -f $PREFIX/include/gtk-3.0/gdk/gdk.h  # [unix]
        - test -f $PREFIX/include/gtk-3.0/gdk/x11/gdkx11window.h  # [linux]
        - test -f $PREFIX/include/gtk-3.0/gtk/gtk.h  # [unix]
        - test -f $PREFIX/include/gtk-3.0/unix-print/gtk/gtkunixprint.h  # [unix]
        - if not exist %PREFIX%\\Library\\include\\gail-3.0\\libgail-util\\gail-util.h exit 1  # [win]
        - if not exist %PREFIX%\\Library\\include\\gtk-3.0\\gdk\\gdk.h exit 1  # [win]
        - if not exist %PREFIX%\\Library\\include\\gtk-3.0\\gdk\\win32\\gdkwin32window.h exit 1  # [win]
        - if not exist %PREFIX%\\Library\\include\\gtk-3.0\\gtk\\gtk.h exit 1  # [win]

        # verify that pkgconfig files get installed
        {% set pcs = ["gail-3.0", "gdk-3.0", "gtk+-3.0"] %}
        {% set pcs = pcs + ["gtk+-unix-print-3.0"] %}  # [unix]
        {% set pcs = pcs + ["gdk-x11-3.0", "gtk+-x11-3.0"] %}  # [linux]
        {% set pcs = pcs + ["gdk-quartz-3.0", "gtk+-quartz-3.0"] %}  # [osx]
        {% set pcs = pcs + ["gdk-win32-3.0", "gtk+-win32-3.0"] %}  # [win]
        {% for pc in pcs %}
        - test -f $PREFIX/lib/pkgconfig/{{ pc }}.pc  # [unix]
        - if not exist %PREFIX%\\Library\\lib\\pkgconfig\\{{ pc }}.pc exit 1  # [win]
        {% endfor %}

        # verify that libs get installed and can be located through pkg-config
        {% set vs_major = dict(vs2015="14", vs2017="15", vs2019="16")[c_compiler] %}  # [win]
        {% set vs_major = "0.0" %}  # [not win]
        {% set pc_libs = [("gail-3.0", "gailutil-3"), ("gdk-3.0", "gdk-3")] %}
        {% set pc_libs = pc_libs + [("gtk+-3.0", "gtk-3")] %}
        {% for pc, lib in pc_libs %}
        - test -f $PREFIX/lib/lib{{ lib }}${SHLIB_EXT}  # [unix]
        - test -f `pkg-config --variable=libdir --dont-define-prefix {{ pc }}`/lib{{ lib }}${SHLIB_EXT}  # [unix]
        - if not exist %PREFIX%\\Library\\bin\\{{ lib }}-vs{{ vs_major }}.dll exit 1  # [win]
        - for /f "usebackq tokens=*" %%a in (`pkg-config --variable=exec_prefix --dont-define-prefix {{ pc }}`) do if not exist "%%a/bin/{{ lib }}-vs{{ vs_major }}.dll" exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\{{ lib }}.lib exit 1  # [win]
        - for /f "usebackq tokens=*" %%a in (`pkg-config --variable=libdir --dont-define-prefix {{ pc }}`) do if not exist "%%a/{{ lib }}.lib" exit 1  # [win]
        {% endfor %}

        # verify that post-link script does its job
        - test -f $PREFIX/share/glib-2.0/schemas/gschemas.compiled  # [not win]
        - if not exist %PREFIX%\\Library\\share\\glib-2.0\\schemas\\gschemas.compiled exit 1  # [win]
        - test -f $PREFIX/share/icons/hicolor/icon-theme.cache  # [not win]
        - if not exist %PREFIX%\\Library\\share\\icons\\hicolor\\icon-theme.cache exit 1  # [win]
        - test -f $PREFIX/lib/gtk-3.0/3.0.0/immodules.cache  # [not win]
        - if not exist %PREFIX%\\Library\\lib\\gtk-3.0\\3.0.0\\immodules.cache exit 1  # [win]

  - name: gtk3-tests
    script: install.sh  # [unix]
    script: install.bat  # [not unix]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - meson
        - ninja
      host:
        - atk
        - cairo
        - epoxy
        - gdk-pixbuf
        - gettext  # [osx]
        - glib
        - {{ pin_subpackage('gtk3', exact=True) }}
        - harfbuzz
        - libiconv  # [win]
        - pango
      run:
        - adwaita-icon-theme
        - {{ pin_subpackage('gtk3', exact=True) }}
        - pango
        # dependencies needed with x11 enabled
        - xorg-libx11         # [linux]
    test:
      commands:
        # run selected demos
        # (running font_features [pango] fails on linux-aarch64 and linux-ppc64le)
        # (would be good to test it once that can be fixed to stop failing)
        {% set demos = ["application_demo", "clipboard", "cursors"] %}
        {% set demos = demos + ["dialog", "drawingarea", "menus"] %}
        {% set demos = demos + ["glarea", "pickers", "pixbufs"] %}
        {% set demos = demos + ["pagesetup", "textscroll", "css_basics"] %}
        {% set demos = demos + ["themeing_style_classes", "toolpalette"] %}
        {% set demos = demos + ["event_axes", "list_store"] %}
        {% for demo in demos %}
        - xvfb-run -a -s "-screen 0 1024x768x24" bash -c 'gtk3-demo --run {{ demo }} --autoquit'  # [linux]
        - gtk3-demo --run {{ demo }} --autoquit  # [not linux]
        {% endfor %}

about:
  home: http://www.gtk.org/
  license: LGPL-2.0-or-later
  license_family: LGPL
  license_file: COPYING
  summary: Version 3 of the Gtk+ graphical toolkit
  description: |
    GTK is a multi-platform toolkit for creating graphical user interfaces.
    Offering a complete set of widgets, GTK is suitable for projects ranging
    from small one-off projects to complete application suites.
  doc_url: https://developer.gnome.org/gtk3/
  dev_url: https://gitlab.gnome.org/GNOME/gtk

extra:
  feedstock-name: gtk3
  recipe-maintainers:
    - ryanvolz
    - stuarteberg
    - tschoonj
